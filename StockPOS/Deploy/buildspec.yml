version: 0.2

env:
  variables:
    LATEST: "latest"
    ENV_TAG_KEY: "STOCKPOS_BACKEND_TAG"
    DOCKER_BUILDKIT: 1
    ECR_REGION: "ap-southeast-1"
  parameter-store:
    REPO: stockpos-ecr-url
    DockerHub_USERNAME: dockerhub-username
    DockerHub_PASSWORD: dockerhub-password
phases:
  pre_build:
    commands:
      - export VERSION=`grep '<ReleaseVersion>' < ./StockPOS/*.csproj | sed 's/.*<ReleaseVersion>\(.*\)<\/ReleaseVersion>/\1/'`
      - echo Check Docker
      - docker --version
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $ECR_REGION | docker login --username AWS --password-stdin $REPO
      - echo Pull Latest Image for cache
      - docker pull $REPO:$LATEST || true
      - echo Docker Hub Login
      - docker login -u $DockerHub_USERNAME -p $DockerHub_PASSWORD
  build:
    commands:
      - echo Project ReleaseVersion $VERSION
      - echo Building...
      - docker build --file ./StockPOS/Dockerfile --build-arg BUILDKIT_INLINE_CACHE=1 --tag $REPO:$VERSION --cache-from $REPO:$LATEST .
      - docker push $REPO:$VERSION
      - docker tag $REPO:$VERSION $REPO:$LATEST
      - docker push $REPO:$LATEST
      - docker rmi $REPO:$VERSION
      - docker rmi $REPO:$LATEST
      - echo Build completed on `date`
  post_build:
    commands:
      - echo Making File for CodeDeploy
      # - cp ./deploy/scripts/deploy.sh.tpl ./deploy.sh
      - sed -i "/^$ENV_TAG_KEY=/c $ENV_TAG_KEY=$VERSION" ./StockPOS/Deploy/.env
      - sed -i "/^REPO=/c REPO=$REPO" ./StockPOS/Deploy/.env
artifacts:
  files:
    - 'StockPOS/Deploy/docker-compose.yml'
    - 'StockPOS/Deploy/.env'
    - 'StockPOS/Deploy/*.sh'
    - 'StockPOS/Deploy/appspec.yml'
  discard-paths: yes
